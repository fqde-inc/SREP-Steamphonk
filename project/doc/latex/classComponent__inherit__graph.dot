digraph "Component"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{Component\n|# gameObject\l|+ Component()\l+ ~Component()\l+ getGameObject()\l+ handleInput()\l+ update()\l+ renderSprite()\l+ onCollisionStart()\l+ onCollisionEnd()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{CharacterController\n|+ unlockedRocketLauncher\l+ rocketLauncher\l+ unlockedHandgun\l+ handgun\l+ damageComponent\l+ equippedGun\l+ characterPhysics\l+ characterDamagable\l+ swapTimer\l+ reloadTimer\land 8 more...\l|+ CharacterController()\l+ setSprites()\l+ updateSprite()\l+ update()\l+ handleInput()\l+ ReportFixture()\l+ onCollisionStart()\l+ onCollisionEnd()\l+ getShootDirection()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classCharacterController.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{Collectible\n|+ gunType\l# spriteComponent\l# physicsComponent\l# animationSprites\l# animationIndex\l# animationTime\l# animationFrameRate\l|+ Collectible()\l+ initCollectible()\l+ update()\l+ ReportFixture()\l+ onCollisionStart()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classCollectible.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{Crosshair\n||+ Crosshair()\l+ update()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classCrosshair.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [label="{Damageable\n||+ Damageable()\l+ overrideDeathAction()\l+ overrideDamageSound()\l+ takeDamage()\l+ setMaxLife()\l+ setLife()\l+ addLife()\l+ resetLife()\l+ getCurLife()\l+ getMaxLife()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classDamageable.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{EnemyComponent\n||+ EnemyComponent()\l+ update()\l+ setPathing()\l+ onCollisionStart()\l+ onCollisionEnd()\l+ ReportFixture()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classEnemyComponent.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [label="{Explosion\n||+ Explosion()\l+ update()\l+ setRadius()\l+ ReportFixture()\l+ onCollisionStart()\l+ onCollisionEnd()\l+ setDamage()\l+ setKnockback()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classExplosion.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node8 [label="{FollowPathComponent\n||+ FollowPathComponent()\l+ update()\l+ getPositions()\l+ setPositions()\l+ getType()\l+ setType()\l+ computePositionAtTime()\l+ getNumberOfSegments()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classFollowPathComponent.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node9 [label="{PhysicsComponent\n||+ PhysicsComponent()\l+ ~PhysicsComponent()\l+ initCircle()\l+ initBox()\l+ setPhysicsPosition()\l+ addForce()\l+ addImpulse()\l+ setLinearVelocity()\l+ getLinearVelocity()\l+ isSensor()\land 8 more...\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classPhysicsComponent.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node10 [label="{PlatformComponent\n||+ PlatformComponent()\l+ initTile()\l+ moveTo()\l+ update()\l+ getPosition()\l+ onCollisionStart()\l+ onCollisionEnd()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classPlatformComponent.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node11 [label="{Projectile\n|# physics\l# spriteComponent\l# direction\l# lifetime\l# lifespan\l# speed\l# radius\l# damage\l# origin\l|+ Projectile()\l+ init()\l+ update()\l+ getOrigin()\l+ setOrigin()\l+ getDirection()\l+ setDirection()\l+ ReportFixture()\l+ onCollisionStart()\l+ onCollisionEnd()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classProjectile.html",tooltip=" "];
  Node11 -> Node12 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node12 [label="{Bullet\n||+ Bullet()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classBullet.html",tooltip=" "];
  Node12 -> Node13 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node13 [label="{RegularBullet\n||+ RegularBullet()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classRegularBullet.html",tooltip=" "];
  Node12 -> Node14 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node14 [label="{RocketBullet\n||+ RocketBullet()\l+ ReportFixture()\l+ explode()\l+ onCollisionStart()\l+ onCollisionEnd()\l+ update()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classRocketBullet.html",tooltip=" "];
  Node1 -> Node15 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node15 [label="{SideScrollingCamera\n|+ offset\l|+ SideScrollingCamera()\l+ update()\l+ setFollowObject()\l+ setZoomMode()\l+ isZoomMode()\l+ getCamera()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classSideScrollingCamera.html",tooltip=" "];
  Node1 -> Node16 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node16 [label="{SpriteComponent\n||+ SpriteComponent()\l+ renderSprite()\l+ setSprite()\l+ getSprite()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classSpriteComponent.html",tooltip=" "];
  Node1 -> Node17 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node17 [label="{TimerComponent\n|+ isRunning\l+ hasFinished\l|+ TimerComponent()\l+ initTimer()\l+ stopTimer()\l+ update()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classTimerComponent.html",tooltip=" "];
}
